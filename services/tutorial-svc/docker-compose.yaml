version: '3.3'

services:

  # cart-svc:
  #   container_name: cart-svc
  #   build:
  #     context: ./service-cart
  #     dockerfile: Dockerfile
  #   environment:
  #     - OTEL_SERVICE_NAME=cart-svc
  #     - OTEL_METRICS_EXPORTER=otlp
  #     - OTEL_TRACES_EXPORTER=otlp
  #     - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
  #     - OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:5555
  #     - OTEL_RESOURCE_ATTRIBUTES=service.name=cart-svc,service.version=0.0.1-SNAPSHOT
  #   ports:
  #     - "8080:8080"

  # inventory-svc:
  #   container_name: inventory-svc
  #   build:
  #     context: ./service-inventory
  #     dockerfile: Dockerfile
  #   environment:
  #     - OTEL_SERVICE_NAME=inventory-svc
  #     - OTEL_METRICS_EXPORTER=otlp
  #     - OTEL_TRACES_EXPORTER=otlp
  #     - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
  #     - OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:5555
  #     - OTEL_RESOURCE_ATTRIBUTES=service.name=inventory-svc,service.version=0.0.1-SNAPSHOT
  #   ports:
  #     - "8081:8081"

  tempo:
    image: grafana/tempo:1.5.0
    command: [ "-search.enabled=true", "-config.file=/etc/tempo.yaml" ]
    container_name: tempo
    hostname: tempo
    volumes:
      - ./tool-config/tempo-config.yaml:/etc/tempo.yaml
      - ./tool-config/tempo-overrides.yaml:/etc/overrides.yaml
      - ./tempo-data:/tmp/tempo
    ports:
      - "3200:3200"
      - "4317:4317"
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:3200/status || exit 1

  
  loki:
    container_name: loki
    hostname: loki
    image: grafana/loki:2.8.1
    restart: always
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./tool-config/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:9090/status || exit 1

  promtail:
    container_name: promtail
    image: grafana/promtail:2.8.1
    restart: always
    volumes:
      - ./tool-config/promtail-config.yaml:/etc/promtail-config.yaml
      - ./logs:/var/log
    command: -config.file=/etc/promtail-config.yaml
  
  collector:
    image: otel/opentelemetry-collector:latest
    container_name: collector
    hostname: collector
    depends_on:
#      tempo:
#        condition: service_healthy
      prometheus:
        condition: service_healthy
    command: [ "--config=/etc/collector-config.yaml" ]
    volumes:
      - ./tool-config/collector-config.yaml:/etc/collector-config.yaml
    ports:
      - "5555:5555"
      - "6666:6666"

  grafana:
    image: grafana/grafana:9.3.8
    restart: always
    container_name: grafana
    hostname: grafana
    depends_on:
#      tempo:
#        condition: service_healthy
      prometheus:
        condition: service_healthy
    volumes:
#      - ./tool-config/grafana-bootstrap.ini:/etc/grafana/grafana.ini
      - ./tool-config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1

networks:
  default:
    name: rcl-local-docker
